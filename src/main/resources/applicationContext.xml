<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- 扫描  -->
	<context:component-scan base-package="com.huawei.cloud.service"/>
	
	<context:property-placeholder location="classpath:dbconfig.properties"/>	
	<bean id="pooledDataSource"  class = "com.alibaba.druid.pool.DruidDataSource" destroy-method = "close">
		<property name="url" value="${jdbc.jdbcUrl}"></property>
		<property name="driverClassName" value="${jdbc.driverClass}"></property>
		<property name="username" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>	

        <property name = "filters" value = "${filters}" />  
         <!-- 最大并发连接数 -->
        <property name = "maxActive" value = "${maxActive}" />
        <!-- 初始化连接数量 -->
        <property name = "initialSize" value = "${initialSize}" />
        <!-- 配置获取连接等待超时的时间 -->
        <property name = "maxWait" value = "${maxWait}" />
        <!-- 最小空闲连接数 -->
        <property name = "minIdle" value = "${minIdle}" />  
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name = "timeBetweenEvictionRunsMillis" value ="${timeBetweenEvictionRunsMillis}" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name = "minEvictableIdleTimeMillis" value ="${minEvictableIdleTimeMillis}" />  
        <property name = "validationQuery" value = "${validationQuery}" />  
        <property name = "testWhileIdle" value = "${testWhileIdle}" />  
        <property name = "testOnBorrow" value = "${testOnBorrow}" />  
        <property name = "testOnReturn" value = "${testOnReturn}" />  
        <property name = "maxOpenPreparedStatements" value ="${maxOpenPreparedStatements}" />
        <!-- 打开 removeAbandoned 功能 -->
        <property name = "removeAbandoned" value = "${removeAbandoned}" />
        <!-- 1800 秒，也就是 30 分钟 -->
        <property name = "removeAbandonedTimeout" value ="${removeAbandonedTimeout}" />
        <!-- 关闭 abanded 连接时输出错误日志 -->   
        <property name = "logAbandoned" value = "${logAbandoned}"/>			
	</bean>	
		
		<!-- 2. mybatis的SqlSession的工厂: SqlSessionFactoryBean dataSource:引用数据源 MyBatis定义数据源,同意加载配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mgbconfig.xml"></property>
		<property name="dataSource" ref="pooledDataSource"></property>	
		<property name="mapperLocations" value="classpath*:mapper/*.xml"></property>
	</bean>	
	
	<!--配置扫描器,将mybatis接口的实现加入到ioc容器中  -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--扫描所有的接口,加入到ioc容器中  -->
		<property name="basePackage" value="com.huawei.cloud.dao"></property>
<!-- 		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>	 -->
	</bean>	
	
		<!-- 事务控制 -->	<!--	控制数据源-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="pooledDataSource"></property>
	</bean>	
	<aop:config>
		<aop:pointcut expression="execution(* com.huawei.cloud.service..*(..))" id="txPoint"/>
		<aop:advisor advice-ref="txAdvice"  pointcut-ref="txPoint"/>
	</aop:config>
	<!--事务增强,标记get数据不需要事务  -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes >
			<tx:method name="*"/>
			<tx:method name="get*" read-only="true"/>			
		</tx:attributes>
	</tx:advice>

</beans>
